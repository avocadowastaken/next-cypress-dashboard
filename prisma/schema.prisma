generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  projects Project[]
  accounts UserAccount[]
}

model UserAccount {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  accessToken String?

  providerId        String
  providerAccountId String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, providerId])
  @@unique([providerId, providerAccountId])
  @@unique([userId, providerId, providerAccountId])
}

model Project {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  org        String
  repo       String
  providerId String

  secrets ProjectSecrets?

  runs  Run[]
  users User[]

  @@unique([org, repo, providerId])
}

model ProjectSecrets {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  recordKey String @default(cuid())

  projectId String  @unique
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

enum OS {
  unknown
  darwin
  linux
  windows
}

enum Browser {
  unknown
  chrome
  chromium
  edge
  electron
  firefox
}

model Run {
  id String @id @default(cuid())

  createdAt   DateTime  @default(now())
  completedAt DateTime?

  totalPassed  Int @default(0)
  totalFailed  Int @default(0)
  totalPending Int @default(0)
  totalSkipped Int @default(0)

  groupId   String
  ciBuildId String
  machineId String @default(cuid())

  commitSha         String @default("")
  commitBranch      String @default("")
  commitMessage     String @default("")
  commitAuthorName  String @default("")
  commitAuthorEmail String @default("")

  os        OS     @default(unknown)
  osVersion String @default("")

  browser        Browser @default(unknown)
  browserVersion String  @default("")

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  instances RunInstance[]

  @@unique([groupId, ciBuildId, projectId])
}

model RunInstance {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  spec    String
  groupId String

  claimedAt   DateTime?
  completedAt DateTime?

  error        String?
  testResults  Json?
  totalPassed  Int     @default(0)
  totalFailed  Int     @default(0)
  totalPending Int     @default(0)
  totalSkipped Int     @default(0)

  runId String
  run   Run    @relation(fields: [runId], references: [id], onDelete: Cascade)

  @@unique([spec, runId, groupId])
  @@index([id, claimedAt])
  @@index([runId, groupId, claimedAt])
}
